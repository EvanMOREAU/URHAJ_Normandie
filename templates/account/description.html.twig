{% extends 'base.html.twig' %}

{% block body %}

<link rel="stylesheet" href="/css/template-form-admin.css">

<div class="form">
<br><br>
    <div class="title">Description</div>
    <div class="subtitle">Décrivez vous en quelques lignes</div>
    <span id="characterCount" style='color:white;'></span>
<div class="input-group">
    {{ form_start(form) }}
    <div class="input-container ic1">
        {{ form_widget(form.description, { 'attr': {'placeholder': '', 'class': 'input', 'data-placeholder': 'Description', 'oninput': 'countCharacters(this)', 'onfocus': "if(this.value=='') { this.classList.add('has-value'); this.parentElement.classList.add('has-value'); }", 'onblur': "if(this.value=='') { this.classList.remove('has-value'); this.parentElement.classList.remove('has-value'); }"} }) }}
        <div class="cut"></div>
        <label class="iLabel" for="{{ form.description.vars.id }}">Description</label>
    </div>
    
    <br>
    <div class="button-container">
        
        <button type="submit" class="buttonsend narrow-button">
            <div class="svg-wrapper-1">
                <div class="svg-wrapper">
                <svg height="24" width="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0 0h24v24H0z" fill="none"></path>
                    <path d="M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z" fill="currentColor"></path>
                </svg>
                </div>
            </div>
            <span>Enregistrer</span>
        </button>
    </div>
</div>
    {{ form_end(form) }}
</div>

<br>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).ready(function() {
    // Écoutez l'événement "input" sur chaque champ de texte
    $('.input').on('input', function() {
        var inputValue = $(this).val(); // Récupérez la valeur du champ de texte
        var placeholder = $(this).data('placeholder'); // Récupérez le placeholder d'origine depuis l'attribut "data-placeholder"
        
        // Ajoutez ou supprimez la classe "has-value" selon que le champ contient du texte ou est vide
        if (inputValue !== '') {
            $(this).addClass('has-value');
        } else {
            $(this).removeClass('has-value');
        }
    });
});


</script>

<script>
    function countCharacters(element) {
        var maxLength = 136;
        var currentLength = element.value.length;
        var remainingLength = maxLength - currentLength;

        if (remainingLength >= 0) {
            document.getElementById('characterCount').textContent = remainingLength + ' caractères restants';
        } else {
            // Limitez la saisie à maxLength caractères
            element.value = element.value.substr(0, maxLength);
            document.getElementById('characterCount').textContent = 'Limite de caractères atteinte';
        }
    }
</script>

{% endblock %}