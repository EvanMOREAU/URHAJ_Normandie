{% extends 'account/accountnav.html.twig' %}

{% block body %}
<style>
    body {
        background-color: #15172b;
        border-radius: 20px;
        height: auto;
        padding: 20px;
        width: auto;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .form {
        background-color: #15172b;
        border-radius: 20px;
        box-sizing: border-box;
        height: 500px;
        padding: 20px;
        width: 320px;
    }

    .title {
        color: #eee;
        font-family: sans-serif;
        font-size: 36px;
        font-weight: 600;
        margin-top: 30px;
    }

    .subtitle {
        color: #eee;
        font-family: sans-serif;
        font-size: 16px;
        font-weight: 600;
        margin-top: 10px;
    }

    .input-container {
        height: 50px;
        position: relative;
        width: 100%;
    }

    .ic1 {
        margin-top: 40px;
    }

    .ic2 {
        margin-top: 30px;
    }

    .input {
        background-color: #303245;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        font-size: 18px;
        height: 100%;
        outline: 0;
        padding: 4px 20px 0;
        width: 100%;
    }

    .cut {
        background-color: #15172b;
        border-radius: 10px;
        height: 20px;
        left: 20px;
        position: absolute;
        top: -20px;
        transform: translateY(0);
        transition: transform 200ms;
        width: 76px;
    }

    .cut-short {
        width: 80px;
    }

    .iLabel {
        color: #65657b;
        font-family: sans-serif;
        left: 20px;
        line-height: 14px;
        pointer-events: none;
        position: absolute;
        transform-origin: 0 50%;
        transition: transform 200ms, color 200ms;
        top: 20px;
    }

    .input:focus ~ .cut,
    .input.has-value ~ .cut {
        transform: translateY(8px);
    }

    .input:focus ~ .iLabel,
    .input.has-value ~ .iLabel {
        transform: translateY(-30px) translateX(10px) scale(0.75);
        color: #dc2f55;
    }

    .input:not(:focus) ~ .iLabel {
        color: #808097;
    }

    .input.has-value {
        background-color: #08d;
    }

    .input.has-value::placeholder {
        color: red;
        background-color: blue;
    }

    /* Envoi */
        .buttonsend {
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: inherit;
        font-size: 20px;
        background: royalblue;
        color: white;
        padding: 0.7em 1em;
        padding-left: 0.9em;
        display: flex;
        align-items: center;
        border: none;
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.2s;
        }
        .button-container {
            width: 100%;
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
        .buttonsend span {
        display: block;
        margin-left: 0.3em;
        transition: all 0.3s ease-in-out;
        }

        .buttonsend svg {
        vertical-align: middle;
        display: block;
        transform-origin: center center;
        transition: transform 0.3s ease-in-out;
        }

        .buttonsend:hover .svg-wrapper {
        animation: fly-1 0.6s ease-in-out infinite alternate;
        }

        .buttonsend:hover svg {
        transform: translateX(1.2em) rotate(45deg) scale(1.1);
        }

        .buttonsend:hover span {
        transform: translateX(40em);
        }

        .buttonsend:active {
        transform: scale(0.3);
        }

        @keyframes fly-1 {
        from {
            transform: translateY(0.1em);
        }

        to {
            transform: translateY(-0.3em);
        }
        }
</style>
<div class="form">
    <div class="title">Réseaux</div>
    <div class="subtitle">Partagez vos réseaux</div>

    {{ form_start(form) }}
    <div class="input-container ic1">
        {{ form_widget(form.facebook, { 'attr': {'placeholder': '', 'class': 'input', 'data-placeholder': 'Facebook', 'onfocus': "if(this.value=='') { this.classList.add('has-value'); this.parentElement.classList.add('has-value'); }", 'onblur': "if(this.value=='') { this.classList.remove('has-value'); this.parentElement.classList.remove('has-value'); }"} }) }}
        <div class="cut"></div>
        <label class="iLabel" for="{{ form.facebook.vars.id }}">Facebook</label>
    </div>

    <div class="input-container ic2">
        {{ form_widget(form.twitter, { 'attr': {'placeholder': '', 'class': 'input', 'data-placeholder': 'Twitter', 'onfocus': "if(this.value=='') { this.classList.add('has-value'); this.parentElement.classList.add('has-value'); }", 'onblur': "if(this.value=='') { this.classList.remove('has-value'); this.parentElement.classList.remove('has-value'); }"} }) }}
        <div class="cut"></div>
        <label class="iLabel" for="{{ form.twitter.vars.id }}">Twitter</label>
    </div>
    <div class="input-container ic2">
        {{ form_widget(form.linkedin, { 'attr': {'placeholder': '', 'class': 'input', 'data-placeholder': 'Linkedin', 'onfocus': "if(this.value=='') { this.classList.add('has-value'); this.parentElement.classList.add('has-value'); }", 'onblur': "if(this.value=='') { this.classList.remove('has-value'); this.parentElement.classList.remove('has-value'); }"} }) }}
        <div class="cut cut-short"></div>
        <label class="iLabel" for="{{ form.linkedin.vars.id }}">Linkedin</label>
    </div>
    <div class="input-container ic2">
        {{ form_widget(form.instagram, { 'attr': {'placeholder': '', 'class': 'input', 'data-placeholder': 'Instagram', 'onfocus': "if(this.value=='') { this.classList.add('has-value'); this.parentElement.classList.add('has-value'); }", 'onblur': "if(this.value=='') { this.classList.remove('has-value'); this.parentElement.classList.remove('has-value'); }"} }) }}
        <div class="cut cut-short"></div>
        <label class="iLabel" for="{{ form.instagram.vars.id }}">Instagram</label>
    </div>
    <br>
    <button type="submit" class="buttonsend">
        <div class="svg-wrapper-1">
            <div class="svg-wrapper">
            <svg height="24" width="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M0 0h24v24H0z" fill="none"></path>
                <path d="M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z" fill="currentColor"></path>
            </svg>
            </div>
        </div>
        <span>Enregistrer</span>
    </button>
    {{ form_end(form) }}
</div>

<br>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
$(document).ready(function() {
    // Écoutez l'événement "input" sur chaque champ de texte
    $('.input').on('input', function() {
        var inputValue = $(this).val(); // Récupérez la valeur du champ de texte
        var placeholder = $(this).data('placeholder'); // Récupérez le placeholder d'origine depuis l'attribut "data-placeholder"
        
        // Ajoutez ou supprimez la classe "has-value" selon que le champ contient du texte ou est vide
        if (inputValue !== '') {
            $(this).addClass('has-value');
        } else {
            $(this).removeClass('has-value');
        }
    });
});
</script>
{% endblock %}